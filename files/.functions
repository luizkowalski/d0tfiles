# squashit - Squashes the current branch into a single commit and merges it into the main branch.
#
# Usage: squashit [main_branch]
#
# Arguments:
#   main_branch: The name of the main branch to merge the squashed branch into. Default is "main".
#
# Example:
#   squashit develop
#
# This function will:
#   1. Get the name of the current branch.
#   2. Checkout the main branch and pull the latest changes.
#   3. Create a temporary branch.
#   4. Squash the current branch into a single commit.
#   5. Commit the squashed changes.
#   6. Checkout the original branch and reset it to the temporary branch.
#   7. Delete the temporary branch.
#
# Note: This function will not push the changes to the remote repository.
function squashit() {
  local main_branch="${1:-main}"

  to_squash=$(git symbolic-ref --short -q HEAD)
  echo "Squashing ${to_squash}..."

  echo "Going back to main and refresh it..."
  git checkout -q $main_branch
  git pull -q origin $main_branch

  echo "Done. Going to a temp branch..."
  temp_branch="temp-${RANDOM}"

  echo "Creating temp branch ${temp_branch}..."
  git checkout -b $temp_branch

  echo "Done. Squashing ${to_squash}..."
  git merge --squash $to_squash

  echo "Squashed. Committing..."
  git commit -am "Squashed $to_squash"

  git checkout $to_squash
  git reset --hard $temp_branch

  echo "All done, deleting $temp_branch"
  git branch -D $temp_branch
}

function reload() {
  echo "Reloading..."
  source ~/dotfiles/files/.zshrc
}

function lon() {
  echo '{"id":1,"method":"setState","params":{"state":true}}' | nc -u -w 1 192.168.178.20 38899
}

function loff() {
  echo '{"id":1,"method":"setState","params":{"state":false}}' | nc -u -w 1 192.168.178.20 38899
}

vialogin() {
  heroku run bin/rails runner "puts %(:globe_with_meridians: #{Rails.application.routes.url_helpers.create_from_signed_link_session_url(sgid: User.find_by(email: 'luiz@viaeurope.com').to_sgid(for: 'login'))})" -a viaeurope-${1:-production}
}

function oneoff() {
  local task=$1
  local environment="${2:-production}"
  STATEMENT_TIMEOUT=120000 RAILS_LOG_LEVEL=info JUDOSCALE_LOG_LEVEL=WARN IRB_USE_AUTOCOMPLETE=false IRB_USE_COLORIZE=true \
    heroku run bundle exec rails oneoff:$task -a=viaeurope-$environment
}

function update() {
  if [ -e "bin/stubs/update" ]; then
    bin/stubs/update $@
  elif [ -e "bin/update" ]; then
    bin/update $@
  else
    command bundle
    yarn install
    bin/rails db:migrate
  fi
}

function dev() {
  if [ -e "bin/stubs/dev" ]; then
    bin/stubs/dev $@
  elif [ -e "bin/dev" ]; then
    bin/dev $@
  else
    dev
  fi
}
